# This workflow will build a .NET project and analyze it with SonarCloud
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET RoomBooking

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  analysis:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install SonarScanner CLI
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Analyze with SonarCloud
      uses: SonarSource/sonarcloud-github-action@v1
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        # Additional arguments for the SonarScanner CLI
        args: |
          -Dsonar.projectKey="pyankov00_RoomBookingApp.Unwe"
          -Dsonar.organization="pyankov00"
      
    - name: Collect Code Coverage
      run: |
        dotnet tool install --global dotnet-coverage
        dotnet sonarscanner begin /k:"pyankov00_RoomBookingApp.Unwe" /d:sonar.token=${{ secrets.SONAR_TOKEN }}
        dotnet build --no-incremental
        dotnet test --collect:"XPlat Code Coverage"
        dotnet sonarscanner end /d:sonar.token=${{ secrets.SONAR_TOKEN }}
